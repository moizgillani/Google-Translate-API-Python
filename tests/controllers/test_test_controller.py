# -*- coding: utf-8 -*-

"""
googletranslateapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

import json
import dateutil.parser

from tests.controllers.controller_test_base import ControllerTestBase
from apimatic_core.utilities.comparison_helper import ComparisonHelper
from googletranslateapi.api_helper import APIHelper


class TestControllerTests(ControllerTestBase):

    @classmethod
    def setUpClass(cls):
        super(TestControllerTests, cls).setUpClass()
        cls.controller = cls.client.test
        cls.response_catcher = cls.controller.http_call_back

    # testing if it returns the list of languages
    def test_languages(self):

        # Perform the API call through the SDK function
        result = self.controller.languages()

        # Test response code
        assert self.response_catcher.response.status_code == 200
        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('{data:{languages:[]}}')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

    # testing if it can detect the language of any text provided
    def test_language_detect(self):
        # Parameters for the API call
        q = 'English is hard, but detectably so'
        content_type = 'application/x-www-form-urlencoded'

        # Perform the API call through the SDK function
        result = self.controller.detect(q, content_type)

        # Test response code
        assert self.response_catcher.response.status_code == 200
        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('{"data":{"detections":[[{"confidence":1,"isReliable":false,"langua'
            'ge":"en"}]]}}')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

    # testing translation of text to some language
    def test_text_translate(self):
        # Parameters for the API call
        q = 'Hello, world!'
        target = 'es'

        # Perform the API call through the SDK function
        result = self.controller.translate(q, target)

        # Test response code
        assert self.response_catcher.response.status_code == 200
        
        # Test whether the captured response is as we expected
        assert result is not None
        expected_body = APIHelper.json_deserialize('{"data":{"translations":[{"translatedText":"Â¡Hola Mundo!"}]}}')
        received_body = APIHelper.json_deserialize(self.response_catcher.response.text)
        assert ComparisonHelper.match_body(expected_body, received_body)

